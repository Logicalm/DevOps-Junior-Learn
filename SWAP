Нах%я нужен swap в современном мире? Поверь, он нужен, особенно если на серверах у тебя впритык памяти и там крутится какойнить условный редис или жирная база данных.

Свап это дополнительная подстраховка от OOM. OOM эта штука которая нападает на процессы и киляет (убивает) их, когда на сервере заканчивается память.

Свап штука тормозная, если есть возможность, то лучше подкинь памяти чем его подключать. Но если скорость не критична и на сервере 1гиг оперативы, лучше подключи, лишним не будет.



В роли common/tasks создаем таску

- block:
    - name: create a swap file
      shell: fallocate -l {{ swap_size }} /swapfile
      args:
        creates: /swapfile

    - name: set the correct permissions
      file:
        path: /swapfile
        owner: root
        group: root
        mode: '0600'

    - name: make the file a swap file
      shell: mkswap /swapfile
      when: ansible_facts.swapfree_mb == 0

    - name: enable the swap file
      shell: swapon /swapfile
      when: ansible_facts.swapfree_mb == 0

    - name: add swap file to fstab
      mount:
        name: none
        src: /swapfile
        fstype: swap
        opts: sw
        passno: 0
        dump: 0
        state: present

Потом в group_vars делаем два файла web.yml и db.yml в зависимости от того, как у вас называются группы серваков

Туда пишем желаемый размер 

---
swap_size: 1G

   sudo swapoff /swapfile
      sudo rm /swapfile
   

ЗАпускаем плейбук 
ansible-playbook -i inventory/production.ini production.yml -vvv
     

чтобы удалить свап используем это 

sudo swapoff /swapfile
sudo rm /swapfile


Разбираем эту портянку.

Весь процесс создания свапа мы сразу помещаем в секцию block, этакая группировка нескольких связанных тасок в одну сущность. Ну и с block мы в дальнейшем сможем обрабатывать ошибки, типа try/catch.

Что тут у нас.

В первой секции создаем файл под будущий swap.
В этой таске мы используем Ansible модули — shell, file, mount. Глядишь на таких примерах со всеми познакомимся.
Заметили странную х%йню в скобках {{ swap_size }}? это и есть переменная. Мы не указываем конкретный размер свап файла, мы сделаем это чуть позже для каждой группы индивидуальный.
Да, тут еще есть args creates. Аргумент creates используется в модулях shell и command и нужен чтобы проверить существует такой файл или нет. Если файл существует то Ansible ничо не будет делать.
По сути мы запускаем консольную команду на самом сервере через shell модуль, команда для создания свапа могла быть бы и такой:


- name: create a swap file
  shell: dd if=/dev/zero of=/swapfile bs=1024 count={{ swap_size }}k
    args:
      creates=/swapfile


Тут нет правильных и неправильных решений. Если у тебя есть свой способ, то это даже приветствуется.
Во второй секции выставляем нужные права, указываем кто будет овнером и группу владельца. Соответственно овнер и группа у нас root. Ну и делаем chmod выставляя 0600 (rw-------) на этот файл.
Почему root и 0600? Так принято из-за безопасности, в свапе могут храниться конфиденциальные данные и прочие непотребности.
Третья секция будет выполнена при условии что файл подкачки в данный момент равен нулю. То есть оно сначала проверит что swap файл не существует. Если это так, то таска будет выполнена.
Используется модель shell, который запускает обычную линукс команду mkswap /swapfile

Четвертая секция аналогична третьей, если swap файл существует, то выполняется shell команда на подключение swapon /swapfile. Если не существует — увы, идите нах%й, таска не выполнится.
ansible_facts.swapfree_mb = это факт, собранный Ansible, который показывает количество свободной памяти подкачки в мегабайтах. Тему про факты будем проходить отдельно, поэтому пока сильно не заморачиваемся.

Пятая секция прописывает новоиспеченный swap файл в /etc/fstab. Чтобы при перезагрузки сервера, swap автоматически монтировался.
Для этого используется модуль mount.

name: none = указываем точку монтирования, ее нет, это свап

src: /swapfile = путь к файлу подкачки, который будет добавлен в fstab

fstype: swap = тип файловой системы, логично swap

opts: sw = опции монтирования, обычно это sw

passno: 0 = отключаем проверку файловой системы при загрузке

dump: 0 = отключаем дампирование файловой системы. Забей!

state: present = запись в fstab должна быть добавлена, если ее еще нет.

Для других файловых систем будут другие параметры, их разберем позже, когда будем монтировать облачные облака себе в папочку.




