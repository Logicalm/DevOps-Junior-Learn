git init
git remote add origin git@gitlab.com:linuxfactory/ansible-roles.git
git add .
git commit -m "add roles"
git push -u origin master


Если работаешь с кем-то в команде и кто-то обновил роли, тебе нужно произвести повторную инициализацию, запустив плейбук init.yml либо сделать так:


cd infra/roles
git pull
В остальном важных моментов больше нет. Если появятся, допишу.








Генерация ключа для GIT в Linux:
$ssh-keygen -t ed25519 -C "your_email@example.com"
Сохранить его желательно в /home/ssh/user/.ssh/
(ВАЖНО!!!)
"Генерируем ключ под юзером, а не под рутом" (Ctrl + D, если чо выйти из рута)"

Далее нужно добавить этот ключ в ssh-agent
$eval "$(ssh-agent -s)"

Устанавливаем сам GIT
$apt install git (Под рутом)

После установки переходим снова в свою домашнюю директорию
cd /home/user/project

Прописываем команду для сохранения облачного репозитория себе на тачку
git clone путь к репозиторию по SSH (Его можно взять из UI-интерфейса GIT)

ВУАЛЯ, теперь ваш репозиторий GIT тусуется на тачке и вы можете его использовать.


При первом commit на тачке GIT попросит указать кто вы есть, запускаем эти команды.
*** Please tell me who you are.
Run
  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"
to set your account's default identity.

Также GIT может выдать такую вот хуйню
hint: You have divergent branches and need to specify how to reconcile them.
hint: You can do so by running one of the following commands sometime before
hint: your next pull:
hint:
hint:   git config pull.rebase false  # merge
hint:   git config pull.rebase true   # rebase
hint:   git config pull.ff only       # fast-forward only
hint:
hint: You can replace "git config" with "git config --global" to set a default
hint: preference for all repositories. You can also pass --rebase, --no-rebase,
hint: or --ff-only on the command line to override the configured default per
hint: invocation.

Гит вам говорит, что история веток разошлась и нужно явно указать, каким методом сливать разные ветки при pull.
Обычно принято использовать метод merge, поэтому мы либо каждый раз это уточняем:
git pull --no-rebase
Либо сохраняем глобальный параметр для всех ваших репозиториев:
git config --global pull.rebase false



